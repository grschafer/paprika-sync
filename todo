/* ex: set tabstop=2 shiftwidth=2: */

left off
========

- fix not being able to debug w/ ipdb
  - runserver wasn't pid 1 in the container, so added 'exec' to start script
- TODO: install sass and watch
  - could take package.json and gulpfile.js from cookiecutter-django to mimic if I had answered YES to using a js_task_runner...
  - but just going to brew install sass and run it in --watch mode outside docker, for now
  - `sass --watch sass/project.scss css/project.css`
  - figure out sass with compressor for production deployment
    - do the compression locally and upload resulting assets?
      - doing this for now
- making /add-paprika-account view and form
  - form shows up, but formatting is bad
  - handle form submission and call actions.import_account
  - test error cases (bad credentials, can't reach paprika API, etc.)
  - redirect first-login to add-paprika-account
  - test large number of recipes (does import need to be async somehow?)
    - too slow
      - ideas: multiprocessing pool, celery, every-minute cronjob
      - do every-minute cronjob... simplest while still performant
  - create newsitem on new account import
  - add basic newsfeed to homepage
  - fix logging config (no log statements or prints show in docker)
- no failure count, b/c should give user immediate feedback if they requested the import and it fails
- TODO: make sync-ing functionality work
  - mgmt command to regularly sync all accounts
  - create new Recipe if new uid and if hash differs for existing uid
  - produce NewsItem for any diffs, additions, deletions
  - cronjob script to sync every minute, but lockfile first
    - test lockfile in linux bash
  - add "force-sync" button to UI (in navbar?)
    - make this just change a field on PaprikaAccount (sync_status? requested, inprogress, done) that an every minute cronjob checks?
    - diagram state changes
    - TODO: test state changes
      - TODO: test unique constraint on PaprikaAccount.username and alias
    - disallow any model changes til import/sync completes...
      - looked at using django-fsm ConcurrentTransitionMixin, but it doesn't seem like a great answer because I can't sensibly expose an in-progress state outside of the given transaction so that cronjobs can read it (ConcurrentTransitionMixin requires that you save changes in an atomic block, which means that I'd be wrapping all my save calls in an atomic block... guess that could work)
    - add last_synced field to PaprikaAccount
- move actions to methods on PaprikaAccount
- fix RecipeSerializer... complaining about image_url being invalid url and photo_hash being null
  - sometimes image_url points to a local, on-device url? is this the default image?
  - how to handle that paprika images are only accessible for a few minutes? cache them all on my own server?
    - JUST REMOVE all queryparams (Signature, Expires, AWSAccessKeyId) and it still works
- add all other fields to recipe model
- fetch categories when fetching recipes (do this in RecipeSerializer if it can't find a matching category in the database?)
  - refactor import_recipes and sync_recipes to be more DRY (so don't have to sync_categories in multiple places)
  - update serializers to handle categories
  - update tests to handle categories
  - figure out why some category uids have extra characters on the end... are these old, deleted category uids that are still hanging around?
    - not sure, must be a paprika 2 thing? tested deleting categories and that removed them from the list of categories returned by the API, recipes aren't changed (still link to old categories)
  - handle unknown/missing categories when serializing recipes
  - handle parent_uid for nested categories
  - test importing new account -- seems to import recipes and categories correctly
- check that refactor of sync_recipes doesn't create newsitems for every recipe on new import
  - they do, fix it
- make recipe list view
  - test it on mobile
  - make a grid thumbnail version? yes, but needs more work to overlay recipe name and handle clicks and lazy-loading
- make recipe detail view
- make recipe diff view
- make diff accounts view
- make view of all other accounts
- update nav
- update auth to use email only, login immediately on email confirm
- make paprikaaccount form bootstrappy
- update all "not implemented yet" stuff (clone recipes, newsitems links)
- TODO: deploy and share
  - switch from caddy to traefik
    - https://github.com/pydanny/cookiecutter-django/pull/1714
  - deploy
    - wrote deploy.sh script
    - update sentry from api to newer sentry_sdk
    - env vars not loading when running compose files in production...
      - SENTRY_DSN is loaded from env WITH quotes (https://github.com/docker/compose/issues/3702) so removed quotes there
      - having to fix everything by re-deploying, kinda hard to change things on the server (can't docker exec into container and run entrypoint script, which is needed for db connection info)
        - use `docker-compose run` (rather than eval) which will bring up a new container (and run entrypoint) but changes will write to the same db
  - make admin user account
  - TODO: user test run
    - TODO: add note that you must have a paprika cloud sync account (give instructions for this) for the site to work
    - TODO: change "username" to "paprika cloud sync account email" or similar
    - if cloud sync for the first time and try to associate paprika account before sync finishes, creating PaprikaAccount works but shows error: 401 Client Error: UNAUTHORIZED
      - maybe username/password is actually wrong
        - confirm user/pass works, otherwise prompt again
    - TODO: prevent auto-capitalization on mobile devices: https://stackoverflow.com/questions/5171764/how-do-you-turn-off-auto-capitalisation-in-html-form-fields-in-ios
  - TODO: fix logging in production
  - TODO: run cronjobs (make a helper script to install them on deploy)
  - TODO: supervisor to restart docker-compose command on server reboot
  - TODO: invitation link (should live in database or environment so it's not committed in code)
    - TODO: disable normal registration
    - TODO: limit signups to invitees
  - TODO: make sure signup works (incl verification email, forgot password, etc.)
  - TODO: also share feature roadmap (trello board?)
  - TODO: open source code (review for secrets)
  - TODO: change HSTS in config/settings/production.py
  - TODO: test sending email to paprika-sync.com
  - TODO: try out digitalocean CDN
    - does whitenoise fingerprint asset files? looks like yes
- TODO: figure out how to update recipes (do they get a new uid? or just an updated hash?)
- TODO: add clone recipe (i.e. copy a recipe you don't have at all)
  - TODO: how to handle missing categories in destination account?
- TODO: add update recipe (i.e. update your recipe with changes they've made)
- TODO: improve newslist formatting, language
- TODO: weekly digest email
- TODO: search, filter, sort on recipe list views
- TODO: limit categories queryset to currently logged-in user (in admin)
- TODO: privacy page (allow setting default and per-user checkboxes for "publish my actions to" and "show me actions from")


general
=======

to start local server: docker-compose -f local.yml up

to continuously re-compile sass: sass --watch paprika_sync/static/sass/project.scss paprika_sync/static/css/project.css

to run tests: docker-compose -f local.yml run django pytest paprika_sync/core

see bashin.sh for docker commands (e.g. running a shell)

see tasks here: https://github.com/grschafer/paprika-sync/projects/1

to force rebuild the container...
    force rebuild: docker-compose build django
    or delete the image: docker rmi -f paprika_sync_local_django

connect to production:
    docker-machine env paprika-sync
    eval $(docker-machine env paprika-sync)
